plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}


android {
    namespace 'com.example.tmdbclient'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.tmdbclient"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String","API_KEY","\"2694651962e8620b19860e226300476a\""
        buildConfigField "String","BASE_URL","\"https://api.themoviedb.org/3/\""


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        dataBinding = true
    }
}

dependencies {

    def lifecycle_version = "2.6.1"
    def arch_version="2.1.0"
    def room_version = "2.5.1"
    def coroutine_version="1.6.4"
    def dagger_version="2.28.1"
    def retrofit_version="2.9.0"

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

/*    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"*/
    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //OKHttp
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6"
    implementation 'com.github.bumptech.glide:glide:4.15.1'


    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'androidx.test.ext:junit:1.1.4'
    testImplementation "com.google.truth:truth:1.1.4"
    testImplementation "org.robolectric:robolectric:4.10.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
    testImplementation "org.mockito:mockito-core:2.19.0"
    testImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "com.google.truth:truth:1.1.4"
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
    androidTestImplementation "org.mockito:mockito-core:2.19.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}